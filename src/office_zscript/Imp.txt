class Imp: DoomPlayer
{		
	const TELEPORT_TARGET_TID = 13;
	const STARTING_HEALTH = 100;
	
	override void PostBeginPlay()
    {
		super.PostBeginPlay();
		A_Log("Player init");
		A_GiveInventory ("Mana1", 200);
		//bInvulnerable = true;  // It works to set invulnerable flag here to switch to godmode mugshot - iddqd also works but not after teleport happens :/
	}
	

	Default {
		+BUDDHA
		//-PICKUP
		
		Player.WeaponSlot 1, "ImpFist", "BroomWeapon";
		Player.WeaponSlot 2, "ImpGun";
		Player.WeaponSlot 3, "MugGun";
		//Player.WeaponSlot 3, "ImpGun";
		//Player.WeaponSlot 4, "ImpGun";
		//Player.WeaponSlot 5, "ImpGun";
		//Player.WeaponSlot 6, "ImpGun";
		//Player.WeaponSlot 7, "ImpGun";
		
		Player.DisplayName "Imp";
		Player.StartItem "ImpFist";
		//Player.StartItem "ImpGun";
		Player.StartItem "Mana1",100;
		
		
		Speed 0.5;
		Health STARTING_HEALTH;
	}
	
	States
	{
		Spawn:
		TNT1 A 2 {
			//A_Log("Imp.Spawn");
		}
		
		Pain:  //CHECK HP... IF == 1 teleport
		TNT1 A 2
		{
			if(A_JumpIfHealthLower(2,"Null"))
			{
				let numRespawnsCVar = CVar.FindCVar("numPlayerRespawns");
				let numRespawns = numRespawnsCVar.GetInt();
				numRespawns++;
				numRespawnsCVar.SetInt(numRespawns);
				A_Log("Respawns:");
				A_LogInt(numRespawns);
				// Simulated teleport
				let teleporter = GetTeleporter();
				if (!teleporter) {
					A_Log("Teleporter null");
				} else {
					// Teleport/TeleportFrag are a ZScript actor functions with the following signatures:
					// bool Teleport(Vector3 pos, double angle, int flags)
					// bool TeleportMove(Vector3 pos, bool telefrag, bool modifyactor = true)
					TeleportMove(teleporter.pos, true);
					HealThing(STARTING_HEALTH);
					A_PlaySound("misc/teleport");
					//A_PlaySound("bg/doomjazz", CHAN_BODY, 1, true);
					ACS_NamedExecute("SetMusic", 1, true);
				}
			}
		}
		Goto Spawn;
		
		FormerHuman:
		TNT1 A 2 {
			//A_Log("Imp.FormerHuman");
			//bInvulnerable = true; //Try to get former human mugshot to show on HUD. doesn't seem to work after you take damage once.
		}
		Loop;
		
		CanPickup:
		TNT1 A 2 {
			bPickup = true;
		}
		Loop;
		
		DisableGod: // Currently unused
		TNT1 A 2 {
			A_Log("Imp.DisableGod");
			//bInvulnerable = false;
		}
		Goto Spawn;
	}
	
	Actor GetTeleporter()
    {
		A_Log("GetTeleporter");
        let MonsterFinder = ActorIterator.Create(TELEPORT_TARGET_TID);
        Actor mo = null;
        while ( mo = Actor(MonsterFinder.Next()) )
        {
			A_Log("got actor");
			A_LogInt(mo.tid);
			return mo;
        }
		return mo;
    }
}