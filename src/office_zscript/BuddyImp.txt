class BuddyImp : DoomImp
{
	bool lastDamageWasFriendly;
	
	States
	{
		Spawn: //used as idle state 
		CDIW A 10 A_Look; //actively looks for player
		Loop;
		
		See:  
		CDIW AB 3 A_Chase; //player found - chase
		Loop;
		
		Pain:  //pain frames 
		CDIP A 3;
		CDIP A 3 A_Pain;
		Goto See;
		
		Melee:     //works like a switch statement , should carry down
		Missile:
		CDIA A 8 A_FaceTarget;
		CDIA AB 6 A_TroopAttack;
		Goto See;
		
		Death:
		XDeath:
		TROO I 8;
		TROO J 8; //A_Scream
		TROO K 6;
		TROO L 6 A_NoBlocking;
		TROO M -1 {
			if (lastDamageWasFriendly) {
				Thing_Raise(0);
			}
		}
		Stop;
	}
	
	override int DamageMobj(Actor inflictor, Actor source, int damage, Name mod, int flags = 0, double angle = 0) {
		//A_Log("Damaged by:" .. source .. ", friendly:" .. source.bFriendly);
		lastDamageWasFriendly = source.bFriendly;
		return super.DamageMobj(inflictor, source, damage, mod, flags, angle);
	}
}