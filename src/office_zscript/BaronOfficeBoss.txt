class BaronOfficeBoss: BaronOfHell
{
	bool lastDamageWasCoffee;
	
	Default
	{
		+FRIENDLY
		Speed 0;
		Obituary "Wow, that was the worst performance review you've had yet! Maybe we should try this again...";
	}
	
	States
	{
		Spawn: //used as idle state 
		CDBB AB 10 A_Look; //actively looks for player
		Loop;
		
		See:  
		CDBB AB 10 A_Chase;
		goto spawn;
		
		Pain:  //pain frames 
		CDBB A 2 ACS_NamedExecute("coffeehitboss",0);
		CDBB B 2 A_Pain;
		Goto See;
		
		Melee:     //works like a switch statement , should carry down
		Missile:
		CDBB A 8 A_FaceTarget;
		CDBB AB 8 A_BruisAttack;
		Goto See;
		
		Death:
		Stop;
	}
	
	override int DamageMobj(Actor inflictor, Actor source, int damage, Name mod, int flags = 0, double angle = 0) {
		lastDamageWasCoffee = inflictor.GetClassName() == "CoffeeMug_Missile";
		bFriendly = lastDamageWasCoffee;
		if (!lastDamageWasCoffee) {
			source.bBuddha = false; // Actually kill target/player if possible
		}
		A_Log("Damaged by inflictor:" .. inflictor.GetClassName() .. " lastDamageWasCoffee:" .. lastDamageWasCoffee);
		return super.DamageMobj(inflictor, source, damage, mod, flags, angle);
	}
}